---
name: main

on:
  push:
  workflow_dispatch:
    inputs:
      version:
        description: >-
          Upstream version to build container for (object SHA is also
          accepted), defaults to latest release
        required: false
        type: string

jobs:
  docker-publish:
    name: Build and publish Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    # Publishing Docker images only happens when a release published out of the
    # main branch
    steps:
      - name: Determine upstream version
        id: upstream-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          if test -z "${{ inputs.version }}"; then
            # Pick version from latest release
            latest_version=$(gh release view \
             --repo networkupstools/nut \
             --json tagName --jq '.|to_entries[]|.value')
          else
            # Pick user supplied version
            latest_version="${{ inputs.version }}"
          fi
          echo "value=$latest_version" >> "$GITHUB_OUTPUT"

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up QEMU for more platforms supported by Buildx
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |-
            NUT_GITREF=${{ steps.upstream-version.outputs.value }}
          platforms: linux/arm/v7,linux/arm/v6,linux/arm64
          push: true
          tags:
            "ghcr.io/${{ github.repository_owner }}\
            /${{ github.event.repository.name }}:latest

            ghcr.io/${{ github.repository_owner }}\
            /${{ github.event.repository.name }}\
            :${{ steps.upstream-version.outputs.value }}"
